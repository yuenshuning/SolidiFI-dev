==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Ownable
Function name: sendto_txorigin21(address,uint256,address)
PC address: 563
Estimated Gas Usage: 284 - 379
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:81

require (tx.origin == owner_txorigin21)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80810, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sendto_txorigin21(address,uint256,address), txdata: 0x0b95065e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Ownable
Function name: withdrawAll_txorigin34(address,address)
PC address: 695
Estimated Gas Usage: 279 - 374
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:64

require(tx.origin == owner_txorigin34)

--------------------
Initial State:

Account: [CREATOR], balance: 0x420000000080002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin34(address,address), txdata: 0x70e309ef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Ownable
Function name: transferOwnership(address)
PC address: 896
Estimated Gas Usage: 1126 - 1551
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:70

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10880021e0026, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferOwnership(address), txdata: 0xf2fde38b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Ownable
Function name: bug_txorigin40(address)
PC address: 1200
Estimated Gas Usage: 312 - 407
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:55

require(tx.origin == owner_txorigin40)

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000000000042, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bug_txorigin40(address), txdata: 0xfd5225fc0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin15(address,uint256,address)
PC address: 7345
Estimated Gas Usage: 376 - 471
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:186

require(tx.origin == owner_txorigin15)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTo_txorigin15(address,uint256,address), txdata: 0x0405a8a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin32(address)
PC address: 7406
Estimated Gas Usage: 338 - 433
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:394

require(tx.origin == owner_txorigin32)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin32(address), txdata: 0x06b3ad660000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin31(address,uint256,address)
PC address: 7627
Estimated Gas Usage: 442 - 537
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:174

require(tx.origin == owner_txorigin31)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000c0000000410, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin31(address,uint256,address), txdata: 0x093533b0000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin39(address,uint256,address)
PC address: 7987
Estimated Gas Usage: 397 - 492
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:470

require(tx.origin == owner_txorigin39)

--------------------
Initial State:

Account: [CREATOR], balance: 0x48000000040242, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTo_txorigin39(address,uint256,address), txdata: 0x0a20e74e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin21(address,uint256,address)
PC address: 8048
Estimated Gas Usage: 419 - 514
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:81

require (tx.origin == owner_txorigin21)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sendto_txorigin21(address,uint256,address), txdata: 0x0b95065e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin27(address,uint256,address)
PC address: 8180
Estimated Gas Usage: 441 - 536
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:169

require(tx.origin == owner_txorigin27)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20100000000048401, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x200000000, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin27(address,uint256,address), txdata: 0x0ccb9a12000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: NewDanPanAddress(address)
PC address: 8275
Estimated Gas Usage: 1151 - 1576
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:70

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: NewDanPanAddress(address), txdata: 0x0fdea0bc0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin22(address,address)
PC address: 8613
Estimated Gas Usage: 392 - 487
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:108

require(tx.origin == owner_txorigin22)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawAll_txorigin22(address,address), txdata: 0x174afdd400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin6(address,address)
PC address: 8754
Estimated Gas Usage: 347 - 442
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:146

require(tx.origin == owner_txorigin6)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20203, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin6(address,address), txdata: 0x1e65db3c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin16(address)
PC address: 10685
Estimated Gas Usage: 315 - 410
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:151

require(tx.origin == owner_txorigin16)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bug_txorigin16(address), txdata: 0x3261a0e00000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin7(address,uint256,address)
PC address: 10744
Estimated Gas Usage: 397 - 492
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:421

require(tx.origin == owner_txorigin7)

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000008010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTo_txorigin7(address,uint256,address), txdata: 0x3373f9d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin18(address,address)
PC address: 11370
Estimated Gas Usage: 414 - 509
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:136

require(tx.origin == owner_txorigin18)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin18(address,address), txdata: 0x3f1540b600000000000000000000000008020402080820042002010020000404400100000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin20(address)
PC address: 11546
Estimated Gas Usage: 358 - 453
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:384

require(tx.origin == owner_txorigin20)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40213, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin20(address), txdata: 0x5119e0000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin13(address,uint256,address)
PC address: 11605
Estimated Gas Usage: 440 - 535
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:179

require (tx.origin == owner_txorigin13)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2019001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sendto_txorigin13(address,uint256,address), txdata: 0x520aba35000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin12(address)
PC address: 11737
Estimated Gas Usage: 314 - 409
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:116

require(tx.origin == owner_txorigin12)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bug_txorigin12(address), txdata: 0x57c7f0e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin19(address,uint256,address)
PC address: 11796
Estimated Gas Usage: 396 - 491
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:313

require(tx.origin == owner_txorigin19)

--------------------
Initial State:

Account: [CREATOR], balance: 0x181080000081807, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin19(address,uint256,address), txdata: 0x5d7585b8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin3(address,uint256,address)
PC address: 11857
Estimated Gas Usage: 418 - 513
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:233

require(tx.origin == owner_txorigin3)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4048100000000000a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTo_txorigin3(address,uint256,address), txdata: 0x61f4e670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin1(address,uint256,address)
PC address: 11918
Estimated Gas Usage: 440 - 535
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:199

require (tx.origin == owner_txorigin1)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000040002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sendto_txorigin1(address,uint256,address), txdata: 0x64acbadd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin25(address,uint256,address)
PC address: 12050
Estimated Gas Usage: 373 - 468
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:303

require (tx.origin == owner_txorigin25)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin25(address,uint256,address), txdata: 0x68c6116f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: NewDanPanPercent(uint256)
PC address: 12254
Estimated Gas Usage: 1187 - 1612
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:70

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: NewDanPanPercent(uint256), txdata: 0x708d54210000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin34(address,address)
PC address: 12458
Estimated Gas Usage: 434 - 529
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:64

require(tx.origin == owner_txorigin34)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000001b7fa, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin34(address,address), txdata: 0x70e309ef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin29(address,uint256,address)
PC address: 12589
Estimated Gas Usage: 375 - 470
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:141

require (tx.origin == owner_txorigin29)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sendto_txorigin29(address,uint256,address), txdata: 0x76205ec8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin35(address,uint256,address)
PC address: 13143
Estimated Gas Usage: 419 - 514
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:487

require(tx.origin == owner_txorigin35)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTo_txorigin35(address,uint256,address), txdata: 0x8376964d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin26(address,address)
PC address: 13242
Estimated Gas Usage: 347 - 442
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:324

require(tx.origin == owner_txorigin26)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin26(address,address), txdata: 0x8fecc3f900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: setWhitelistedTo(address,bool)
PC address: 14140
Estimated Gas Usage: 1183 - 1608
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:70

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWhitelistedTo(address,bool), txdata: 0xa486309d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin36(address)
PC address: 15866
Estimated Gas Usage: 313 - 408
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:479

require(tx.origin == owner_txorigin36)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bug_txorigin36(address), txdata: 0xb389b2c90000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin2(address,address)
PC address: 15925
Estimated Gas Usage: 368 - 463
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:207

require(tx.origin == owner_txorigin2)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000040800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin2(address,address), txdata: 0xb736900700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin28(address)
PC address: 16056
Estimated Gas Usage: 357 - 452
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:191

require(tx.origin == owner_txorigin28)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bug_txorigin28(address), txdata: 0xb8594fd30000000000000000000000000008408040040404084000000202011004800240, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin4(address)
PC address: 16115
Estimated Gas Usage: 379 - 474
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:414

require(tx.origin == owner_txorigin4)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin4(address), txdata: 0xb9e312580000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin38(address,address)
PC address: 16174
Estimated Gas Usage: 434 - 529
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:404

require(tx.origin == owner_txorigin38)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: withdrawAll_txorigin38(address,address), txdata: 0xbff2792800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin24(address)
PC address: 16311
Estimated Gas Usage: 336 - 431
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:155

require(tx.origin == owner_txorigin24)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bug_txorigin24(address), txdata: 0xcccf4b310000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin5(address,uint256,address)
PC address: 16505
Estimated Gas Usage: 440 - 535
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:159

require (tx.origin == owner_txorigin5)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sendto_txorigin5(address,uint256,address), txdata: 0xe5d6249f000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin17(address,uint256,address)
PC address: 16637
Estimated Gas Usage: 373 - 468
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:215

require (tx.origin == owner_txorigin17)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sendto_txorigin17(address,uint256,address), txdata: 0xebb646c2000000000000000000000000800202010000200008800280022000200420808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferOwnership(address)
PC address: 16803
Estimated Gas Usage: 1171 - 1596
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:70

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferOwnership(address), txdata: 0xf2fde38b0000000000000000000000000240400010000108208020204020100080002000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin8(address)
PC address: 17109
Estimated Gas Usage: 357 - 452
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:462

require(tx.origin == owner_txorigin8)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin8(address), txdata: 0xf54c741d0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin9(address,uint256,address)
PC address: 17168
Estimated Gas Usage: 439 - 534
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:242

require (tx.origin == owner_txorigin9)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000008000401001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin9(address,uint256,address), txdata: 0xf6292d59000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin30(address,address)
PC address: 17300
Estimated Gas Usage: 346 - 441
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:453

require(tx.origin == owner_txorigin30)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000010800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin30(address,address), txdata: 0xf6f1137100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin33(address,uint256,address)
PC address: 17431
Estimated Gas Usage: 395 - 490
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:164

require (tx.origin == owner_txorigin33)

--------------------
Initial State:

Account: [CREATOR], balance: 0x200c1040000042223, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin33(address,uint256,address), txdata: 0xf7ae6cde000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin14(address,address)
PC address: 17563
Estimated Gas Usage: 390 - 485
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:443

require(tx.origin == owner_txorigin14)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2122801000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin14(address,address), txdata: 0xf935226e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: sendto_txorigin37(address,uint256,address)
PC address: 17694
Estimated Gas Usage: 439 - 534
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:223

require (tx.origin == owner_txorigin37)

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000002040203, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sendto_txorigin37(address,uint256,address), txdata: 0xfb44fdd1000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin11(address,uint256,address)
PC address: 17826
Estimated Gas Usage: 372 - 467
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:123

require(tx.origin == owner_txorigin11)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin11(address,uint256,address), txdata: 0xfca25f6c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: bug_txorigin40(address)
PC address: 17887
Estimated Gas Usage: 334 - 429
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:55

require(tx.origin == owner_txorigin40)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bug_txorigin40(address), txdata: 0xfd5225fc0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: withdrawAll_txorigin10(address,address)
PC address: 17946
Estimated Gas Usage: 389 - 484
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:100

require(tx.origin == owner_txorigin10)

--------------------
Initial State:

Account: [CREATOR], balance: 0xa00400021000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin10(address,address), txdata: 0xfe3d3a9400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: setWhitelistedFrom(address,bool)
PC address: 18111
Estimated Gas Usage: 1247 - 1672
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:70

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000001004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWhitelistedFrom(address,bool), txdata: 0xff12bbf400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DanPanCoin
Function name: transferTo_txorigin23(address,uint256,address)
PC address: 18369
Estimated Gas Usage: 460 - 555
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:433

require(tx.origin == owner_txorigin23)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000080000000020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin23(address,uint256,address), txdata: 0xfffdba83000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: DanPanCoin
Function name: findDPPercent(uint256)
PC address: 18590
Estimated Gas Usage: 1221 - 1316
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_27.sol:46

add(a,m)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000802000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: findDPPercent(uint256), txdata: 0xa5948fdbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0, value: 0x0


