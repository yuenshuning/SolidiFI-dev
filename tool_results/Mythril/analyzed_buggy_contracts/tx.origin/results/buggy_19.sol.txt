==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: owned
Function name: bug_txorigin12(address)
PC address: 573
Estimated Gas Usage: 224 - 319
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:59

require(tx.origin == owner_txorigin12)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bug_txorigin12(address), txdata: 0x57c7f0e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: owned
Function name: sendto_txorigin1(address,uint256,address)
PC address: 632
Estimated Gas Usage: 306 - 401
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:90

require (tx.origin == owner_txorigin1)

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sendto_txorigin1(address,uint256,address), txdata: 0x64acbadd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: owned
Function name: transferOwnership(address)
PC address: 834
Estimated Gas Usage: 1126 - 1551
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:78

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferOwnership(address), txdata: 0xf2fde38b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: owned
Function name: transferTo_txorigin11(address,uint256,address)
PC address: 1015
Estimated Gas Usage: 372 - 467
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:70

require(tx.origin == owner_txorigin11)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferTo_txorigin11(address,uint256,address), txdata: 0xfca25f6c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: bug_txorigin32(address)
PC address: 4798
Estimated Gas Usage: 293 - 388
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:194

require(tx.origin == owner_txorigin32)

--------------------
Initial State:

Account: [CREATOR], balance: 0x13, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin32(address), txdata: 0x06b3ad660000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin31(address,uint256,address)
PC address: 4857
Estimated Gas Usage: 375 - 470
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:315

require(tx.origin == owner_txorigin31)

--------------------
Initial State:

Account: [CREATOR], balance: 0x13, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin31(address,uint256,address), txdata: 0x093533b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin39(address,uint256,address)
PC address: 4918
Estimated Gas Usage: 397 - 492
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:263

require(tx.origin == owner_txorigin39)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000c00007, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin39(address,uint256,address), txdata: 0x0a20e74e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonus()
PC address: 5101
Estimated Gas Usage: 1977 - 2732
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:181

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonus(), txdata: 0x0c869ebe, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin27(address,uint256,address)
PC address: 5335
Estimated Gas Usage: 441 - 536
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:306

require(tx.origin == owner_txorigin27)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin27(address,uint256,address), txdata: 0x0ccb9a12000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: releaTeamAddBonus()
PC address: 5429
Estimated Gas Usage: 1151 - 1576
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:78

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x41003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: releaTeamAddBonus(), txdata: 0x13856431, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: releaTeamAddBonus()
PC address: 5518
Estimated Gas Usage: 2021 - 2776
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:319

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: releaTeamAddBonus(), txdata: 0x13856431, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: staticBonus()
PC address: 5874
Estimated Gas Usage: 1933 - 2688
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:172

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: staticBonus(), txdata: 0x1dbcd416, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_2()
PC address: 6230
Estimated Gas Usage: 1955 - 2710
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:214

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_2(), txdata: 0x251cbdcb, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_6()
PC address: 6586
Estimated Gas Usage: 1977 - 2732
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:250

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_6(), txdata: 0x257a50c7, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: moveBrickClear()
PC address: 6942
Estimated Gas Usage: 1932 - 2687
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:140

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: moveBrickClear(), txdata: 0x2aeccacc, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_1()
PC address: 7250
Estimated Gas Usage: 1954 - 2709
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:206

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_1(), txdata: 0x2db9c867, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: caclTeamPerformance()
PC address: 7606
Estimated Gas Usage: 1976 - 2731
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:292

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: caclTeamPerformance(), txdata: 0x2f06b5a7, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin7(address,uint256,address)
PC address: 7840
Estimated Gas Usage: 440 - 535
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:219

require(tx.origin == owner_txorigin7)

--------------------
Initial State:

Account: [CREATOR], balance: 0x43, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin7(address,uint256,address), txdata: 0x3373f9d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: staticBonusCacl()
PC address: 8023
Estimated Gas Usage: 1933 - 2688
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:197

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: staticBonusCacl(), txdata: 0x3380e2f1, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: joinFlexible()
PC address: 8379
Estimated Gas Usage: 1955 - 2710
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:154

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: joinFlexible(), txdata: 0x37bc8aa1, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_4()
PC address: 8735
Estimated Gas Usage: 1977 - 2732
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:232

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_4(), txdata: 0x46f201b1, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: bug_txorigin20(address)
PC address: 8969
Estimated Gas Usage: 314 - 409
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:186

require(tx.origin == owner_txorigin20)

--------------------
Initial State:

Account: [CREATOR], balance: 0x21, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin20(address), txdata: 0x5119e0000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: sendto_txorigin13(address,uint256,address)
PC address: 9028
Estimated Gas Usage: 396 - 491
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:324

require (tx.origin == owner_txorigin13)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin13(address,uint256,address), txdata: 0x520aba35000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: sendto_txorigin13(address,uint256,address)
PC address: 9081
Estimated Gas Usage: 1226 - 35507
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:325

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x7ffffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: sendto_txorigin13(address,uint256,address), txdata: 0x520aba35000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: moveBrick(uint256)
PC address: 9193
Estimated Gas Usage: 1188 - 1613
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:78

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x23, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: moveBrick(uint256), txdata: 0x571833ab0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: moveBrick(uint256)
PC address: 9282
Estimated Gas Usage: 2058 - 2813
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:113

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x417d4f5591404e111, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: moveBrick(uint256), txdata: 0x571833ab0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: bug_txorigin12(address)
PC address: 9517
Estimated Gas Usage: 380 - 475
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:59

require(tx.origin == owner_txorigin12)

--------------------
Initial State:

Account: [CREATOR], balance: 0x401ca8005e000118a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin12(address), txdata: 0x57c7f0e80000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin19(address,uint256,address)
PC address: 9576
Estimated Gas Usage: 374 - 469
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:168

require(tx.origin == owner_txorigin19)

--------------------
Initial State:

Account: [CREATOR], balance: 0x21, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin19(address,uint256,address), txdata: 0x5d7585b8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: teamAddBonus()
PC address: 9759
Estimated Gas Usage: 1954 - 2709
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:189

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: teamAddBonus(), txdata: 0x5de88174, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin3(address,uint256,address)
PC address: 9993
Estimated Gas Usage: 418 - 513
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:133

require(tx.origin == owner_txorigin3)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin3(address,uint256,address), txdata: 0x61f4e670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_9()
PC address: 10176
Estimated Gas Usage: 1931 - 2686
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:275

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_9(), txdata: 0x62bf764e, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: sendto_txorigin1(address,uint256,address)
PC address: 10410
Estimated Gas Usage: 395 - 490
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:90

require (tx.origin == owner_txorigin1)

--------------------
Initial State:

Account: [CREATOR], balance: 0x21, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin1(address,uint256,address), txdata: 0x64acbadd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: sendto_txorigin1(address,uint256,address)
PC address: 10463
Estimated Gas Usage: 1225 - 35506
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:91

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x401ffffffffffffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: sendto_txorigin1(address,uint256,address), txdata: 0x64acbadd000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: sendto_txorigin25(address,uint256,address)
PC address: 10542
Estimated Gas Usage: 417 - 512
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:159

require (tx.origin == owner_txorigin25)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin25(address,uint256,address), txdata: 0x68c6116f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: sendto_txorigin25(address,uint256,address)
PC address: 10595
Estimated Gas Usage: 1247 - 35528
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:160

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: sendto_txorigin25(address,uint256,address), txdata: 0x68c6116f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_7()
PC address: 10707
Estimated Gas Usage: 1127 - 1552
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:78

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: activeBonusCacl_7(), txdata: 0x7b7f885c, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_7()
PC address: 10796
Estimated Gas Usage: 1997 - 2752
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:258

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_7(), txdata: 0x7b7f885c, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin35(address,uint256,address)
PC address: 11030
Estimated Gas Usage: 352 - 447
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:280

require(tx.origin == owner_txorigin35)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10002002007, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin35(address,uint256,address), txdata: 0x8376964d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: joinFixed()
PC address: 11250
Estimated Gas Usage: 1954 - 2709
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:163

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: joinFixed(), txdata: 0x8e9181e9, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: withdrawAll_txorigin26(address,address)
PC address: 11484
Estimated Gas Usage: 391 - 486
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:177

require(tx.origin == owner_txorigin26)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin26(address,address), txdata: 0x8fecc3f900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: withdrawAll_txorigin26(address,address)
PC address: 11537
Estimated Gas Usage: 1218 - 35499
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:178

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: withdrawAll_txorigin26(address,address), txdata: 0x8fecc3f9000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: withdrawForUser(address,uint256)
PC address: 11648
Estimated Gas Usage: 1243 - 1668
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:78

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0xb, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawForUser(address,uint256), txdata: 0x9120020900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: withdrawForUser(address,uint256)
PC address: 11737
Estimated Gas Usage: 2113 - 2868
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:104

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x48000000000000022, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawForUser(address,uint256), txdata: 0x9120020900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: releaActiveBonus()
PC address: 12006
Estimated Gas Usage: 1150 - 1575
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:78

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: releaActiveBonus(), txdata: 0x9d9c8f11, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: releaActiveBonus()
PC address: 12095
Estimated Gas Usage: 2020 - 2775
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:310

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: releaActiveBonus(), txdata: 0x9d9c8f11, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: releaStaticBonus()
PC address: 12451
Estimated Gas Usage: 1932 - 2687
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:301

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: releaStaticBonus(), txdata: 0xa23c133a, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: bug_txorigin36(address)
PC address: 12685
Estimated Gas Usage: 336 - 431
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:272

require(tx.origin == owner_txorigin36)

--------------------
Initial State:

Account: [CREATOR], balance: 0x21, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin36(address), txdata: 0xb389b2c90000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: withdrawAll_txorigin2(address,address)
PC address: 12744
Estimated Gas Usage: 391 - 486
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:99

require(tx.origin == owner_txorigin2)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin2(address,address), txdata: 0xb736900700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: withdrawAll_txorigin2(address,address)
PC address: 12797
Estimated Gas Usage: 1218 - 35499
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:100

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40080000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: withdrawAll_txorigin2(address,address), txdata: 0xb7369007000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: bug_txorigin4(address)
PC address: 12875
Estimated Gas Usage: 313 - 408
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:211

require(tx.origin == owner_txorigin4)

--------------------
Initial State:

Account: [CREATOR], balance: 0x21, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin4(address), txdata: 0xb9e312580000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: withdrawAll_txorigin38(address,address)
PC address: 12934
Estimated Gas Usage: 368 - 463
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:202

require(tx.origin == owner_txorigin38)

--------------------
Initial State:

Account: [CREATOR], balance: 0x23, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin38(address,address), txdata: 0xbff2792800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: withdrawAll_txorigin38(address,address)
PC address: 12987
Estimated Gas Usage: 1195 - 35476
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:203

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x12000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: withdrawAll_txorigin38(address,address), txdata: 0xbff27928000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: teamAddBonusCacl()
PC address: 13187
Estimated Gas Usage: 1975 - 2730
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:284

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: teamAddBonusCacl(), txdata: 0xc70cced4, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_3()
PC address: 13454
Estimated Gas Usage: 1127 - 1552
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:78

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_3(), txdata: 0xca272cc1, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_3()
PC address: 13543
Estimated Gas Usage: 1997 - 2752
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:223

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_3(), txdata: 0xca272cc1, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_5()
PC address: 13899
Estimated Gas Usage: 1932 - 2687
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:241

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_5(), txdata: 0xdabc3741, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: sendto_txorigin17(address,uint256,address)
PC address: 14133
Estimated Gas Usage: 396 - 491
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:108

require (tx.origin == owner_txorigin17)

--------------------
Initial State:

Account: [CREATOR], balance: 0x23, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin17(address,uint256,address), txdata: 0xebb646c2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: sendto_txorigin17(address,uint256,address)
PC address: 14186
Estimated Gas Usage: 1226 - 35507
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:109

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: sendto_txorigin17(address,uint256,address), txdata: 0xebb646c2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferOwnership(address)
PC address: 14298
Estimated Gas Usage: 1194 - 1619
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:78

require(msg.sender == owner)

--------------------
Initial State:

Account: [CREATOR], balance: 0x43, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferOwnership(address), txdata: 0xf2fde38b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: bug_txorigin8(address)
PC address: 14479
Estimated Gas Usage: 313 - 408
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:255

require(tx.origin == owner_txorigin8)

--------------------
Initial State:

Account: [CREATOR], balance: 0x23, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin8(address), txdata: 0xf54c741d0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: sendto_txorigin9(address,uint256,address)
PC address: 14538
Estimated Gas Usage: 395 - 490
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:145

require (tx.origin == owner_txorigin9)

--------------------
Initial State:

Account: [CREATOR], balance: 0x23, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin9(address,uint256,address), txdata: 0xf6292d59000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: sendto_txorigin9(address,uint256,address)
PC address: 14591
Estimated Gas Usage: 1225 - 35506
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:146

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4008704408200188, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: sendto_txorigin9(address,uint256,address), txdata: 0xf6292d59000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: withdrawAll_txorigin30(address,address)
PC address: 14670
Estimated Gas Usage: 390 - 485
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:246

require(tx.origin == owner_txorigin30)

--------------------
Initial State:

Account: [CREATOR], balance: 0x81, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin30(address,address), txdata: 0xf6f1137100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: withdrawAll_txorigin30(address,address)
PC address: 14723
Estimated Gas Usage: 1217 - 35498
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:247

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: withdrawAll_txorigin30(address,address), txdata: 0xf6f11371000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: sendto_txorigin33(address,uint256,address)
PC address: 14801
Estimated Gas Usage: 439 - 534
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:297

require (tx.origin == owner_txorigin33)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin33(address,uint256,address), txdata: 0xf7ae6cde000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: sendto_txorigin33(address,uint256,address)
PC address: 14854
Estimated Gas Usage: 1269 - 35550
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:298

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x14000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: sendto_txorigin33(address,uint256,address), txdata: 0xf7ae6cde000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: moveBrickContracts()
PC address: 15055
Estimated Gas Usage: 1931 - 2686
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:128

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: moveBrickContracts(), txdata: 0xf8f34531, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: withdrawAll_txorigin14(address,address)
PC address: 15289
Estimated Gas Usage: 368 - 463
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:237

require(tx.origin == owner_txorigin14)

--------------------
Initial State:

Account: [CREATOR], balance: 0x23, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawAll_txorigin14(address,address), txdata: 0xf935226e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: withdrawAll_txorigin14(address,address)
PC address: 15342
Estimated Gas Usage: 1195 - 35476
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:238

_recipient.transfer(address(this).balance)

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x7ffffffff, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: withdrawAll_txorigin14(address,address), txdata: 0xf935226e000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: activeBonusCacl_8()
PC address: 15542
Estimated Gas Usage: 1975 - 2730
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:267

require(msg.sender == owner, "only owner can use this method")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: activeBonusCacl_8(), txdata: 0xf94114f4, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: sendto_txorigin37(address,uint256,address)
PC address: 15776
Estimated Gas Usage: 372 - 467
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:117

require (tx.origin == owner_txorigin37)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4206010431808132a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendto_txorigin37(address,uint256,address), txdata: 0xfb44fdd1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: ethBank
Function name: sendto_txorigin37(address,uint256,address)
PC address: 15829
Estimated Gas Usage: 1202 - 35483
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:118

receiver.transfer(amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x1
Caller: [ATTACKER], function: sendto_txorigin37(address,uint256,address), txdata: 0xfb44fdd1000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin11(address,uint256,address)
PC address: 15908
Estimated Gas Usage: 394 - 489
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:70

require(tx.origin == owner_txorigin11)

--------------------
Initial State:

Account: [CREATOR], balance: 0x23, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin11(address,uint256,address), txdata: 0xfca25f6c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: bug_txorigin40(address)
PC address: 15969
Estimated Gas Usage: 356 - 451
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:289

require(tx.origin == owner_txorigin40)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bug_txorigin40(address), txdata: 0xfd5225fc0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ethBank
Function name: transferTo_txorigin23(address,uint256,address)
PC address: 16028
Estimated Gas Usage: 438 - 533
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/tx.origin/buggy_19.sol:228

require(tx.origin == owner_txorigin23)

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferTo_txorigin23(address,uint256,address), txdata: 0xfffdba83000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0


