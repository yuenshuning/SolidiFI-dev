==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: AccountWallet
Function name: withdraw_intou9()
PC address: 4777
Estimated Gas Usage: 1104 - 1389
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:165

require(now > lockTime_intou9[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x48000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: withdraw_intou9(), txdata: 0x1cbdc87d, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AccountWallet
Function name: withdraw_intou9()
PC address: 4836
Estimated Gas Usage: 1940 - 36411
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:167

msg.sender.transfer(transferValue_intou9)

--------------------
Initial State:

Account: [CREATOR], balance: 0xe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2c9800220000004, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0xa
Caller: [ATTACKER], function: withdraw_intou9(), txdata: 0x1cbdc87d, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: AccountWallet
Function name: withdraw_intou17()
PC address: 5060
Estimated Gas Usage: 1104 - 1389
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:108

require(now > lockTime_intou17[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x21000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_intou17(), txdata: 0x24243846, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AccountWallet
Function name: withdraw_intou17()
PC address: 5119
Estimated Gas Usage: 1940 - 36411
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:110

msg.sender.transfer(transferValue_intou17)

--------------------
Initial State:

Account: [CREATOR], balance: 0xe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000000000121, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0xa
Caller: [ATTACKER], function: withdraw_intou17(), txdata: 0x24243846, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: AccountWallet
Function name: withdraw_intou13()
PC address: 6675
Estimated Gas Usage: 1169 - 1454
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:292

require(now > lockTime_intou13[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdraw_intou13(), txdata: 0x5c03b626, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AccountWallet
Function name: withdraw_intou13()
PC address: 6734
Estimated Gas Usage: 2005 - 36476
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:294

msg.sender.transfer(transferValue_intou13)

--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2040080402000e80, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0xa
Caller: [ATTACKER], function: withdraw_intou13(), txdata: 0x5c03b626, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: AccountWallet
Function name: withdraw_ovrflow1()
PC address: 7009
Estimated Gas Usage: 1124 - 1409
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:80

require(now > lockTime_intou1[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_ovrflow1(), txdata: 0x76be3cd1, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AccountWallet
Function name: withdraw_ovrflow1()
PC address: 7068
Estimated Gas Usage: 1960 - 36431
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:82

msg.sender.transfer(transferValue_intou1)

--------------------
Initial State:

Account: [CREATOR], balance: 0x4e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4380, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0xa
Caller: [ATTACKER], function: withdraw_ovrflow1(), txdata: 0x76be3cd1, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: AccountWallet
Function name: withdraw_intou21()
PC address: 7501
Estimated Gas Usage: 1126 - 1411
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:15

require(now > lockTime_intou21[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_intou21(), txdata: 0x81bb4758, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AccountWallet
Function name: withdraw_intou21()
PC address: 7560
Estimated Gas Usage: 1962 - 36433
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:17

msg.sender.transfer(transferValue_intou21)

--------------------
Initial State:

Account: [CREATOR], balance: 0x26, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x21b0080400081040, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0xa
Caller: [ATTACKER], function: withdraw_intou21(), txdata: 0x81bb4758, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: AccountWallet
Function name: withdraw_intou25()
PC address: 7656
Estimated Gas Usage: 1148 - 1433
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:180

require(now > lockTime_intou25[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x43800000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_intou25(), txdata: 0x835185a4, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AccountWallet
Function name: withdraw_intou25()
PC address: 7715
Estimated Gas Usage: 1984 - 36455
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:182

msg.sender.transfer(transferValue_intou25)

--------------------
Initial State:

Account: [CREATOR], balance: 0x83, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x158978000969401, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0xa
Caller: [ATTACKER], function: withdraw_intou25(), txdata: 0x835185a4, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: AccountWallet
Function name: withdraw_intou33()
PC address: 8400
Estimated Gas Usage: 1124 - 1409
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:60

require(now > lockTime_intou33[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_intou33(), txdata: 0xb1f09e89, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AccountWallet
Function name: withdraw_intou33()
PC address: 8459
Estimated Gas Usage: 1960 - 36431
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:62

msg.sender.transfer(transferValue_intou33)

--------------------
Initial State:

Account: [CREATOR], balance: 0x2a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2100002002000800, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0xa
Caller: [ATTACKER], function: withdraw_intou33(), txdata: 0xb1f09e89, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: AccountWallet
Function name: withdraw_intou37()
PC address: 9512
Estimated Gas Usage: 1102 - 1387
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:141

require(now > lockTime_intou37[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x44010400000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_intou37(), txdata: 0xc2bc6798, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: AccountWallet
Function name: withdraw_intou37()
PC address: 9571
Estimated Gas Usage: 1938 - 36409
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:143

msg.sender.transfer(transferValue_intou37)

--------------------
Initial State:

Account: [CREATOR], balance: 0xe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420043d00, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0xa
Caller: [ATTACKER], function: withdraw_intou37(), txdata: 0xc2bc6798, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AccountWallet
Function name: transfer_intou22(address,uint256)
PC address: 10470
Estimated Gas Usage: 13180 - 54126
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:32

balances_intou22[msg.sender] - _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x508000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transfer_intou22(address,uint256), txdata: 0xd7f8581a8a42b52568425284210a5a9600000000000000000800000000000000000000000000000000000000200101400001000101020000000101400100000102014001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AccountWallet
Function name: transfer_intou22(address,uint256)
PC address: 10551
Estimated Gas Usage: 13180 - 54126
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:33

balances_intou22[msg.sender] -= _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x508000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transfer_intou22(address,uint256), txdata: 0xd7f8581a8a42b52568425284210a5a9600000000000000000800000000000000000000000000000000000000200101400001000101020000000101400100000102014001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AccountWallet
Function name: transfer_intou22(address,uint256)
PC address: 10628
Estimated Gas Usage: 13180 - 54126
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_7.sol:34

balances_intou22[_to] += _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x4600402d000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transfer_intou22(address,uint256), txdata: 0xd7f8581aca12c0000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa8000000000000000000000000000000000000000000000000000000000000000, value: 0x0


