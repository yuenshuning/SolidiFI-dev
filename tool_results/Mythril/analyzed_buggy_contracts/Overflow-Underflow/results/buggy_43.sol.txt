==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiHashWrapper
Function name: transfer_intou38(address,uint256)
PC address: 278
Estimated Gas Usage: 13091 - 54037
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:216

balances_intou38[msg.sender] - _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x23400c0000614011, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou38(address,uint256), txdata: 0x7daba89100000000000000000000000000000000000000000000000000000000000000000120010101010101010101010101010101010104010101010108011010002020, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiHashWrapper
Function name: transfer_intou38(address,uint256)
PC address: 358
Estimated Gas Usage: 13091 - 54037
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:217

balances_intou38[msg.sender] -= _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x23400c0000614011, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou38(address,uint256), txdata: 0x7daba89100000000000000000000000000000000000000000000000000000000000000000120010101010101010101010101010101010104010101010108011010002020, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EventMetadata
Function name: transfer_undrflow2(address,uint256)
PC address: 420
Estimated Gas Usage: 13113 - 54059
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:30

balances_intou2[msg.sender] - _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000008afb2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transfer_undrflow2(address,uint256), txdata: 0x37ae6b7300000000000000000000000000000000000000000000000000000000000000000101018001010102400101010101010101010101010201010101010101010101, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiHashWrapper
Function name: transfer_intou38(address,uint256)
PC address: 434
Estimated Gas Usage: 13091 - 54037
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:218

balances_intou38[_to] += _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou38(address,uint256), txdata: 0x7daba891000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef8000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EventMetadata
Function name: transfer_undrflow2(address,uint256)
PC address: 501
Estimated Gas Usage: 13113 - 54059
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:31

balances_intou2[msg.sender] -= _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000008afb2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transfer_undrflow2(address,uint256), txdata: 0x37ae6b7300000000000000000000000000000000000000000000000000000000000000000101018001010102400101010101010101010101010201010101010101010101, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EventMetadata
Function name: transfer_undrflow2(address,uint256)
PC address: 578
Estimated Gas Usage: 13113 - 54059
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:32

balances_intou2[_to] += _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x21810c00020fbfb9, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x80, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_undrflow2(address,uint256), txdata: 0x37ae6b73000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefc000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ProofHash
Function name: transfer_intou38(address,uint256)
PC address: 644
Estimated Gas Usage: 13113 - 54059
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:216

balances_intou38[msg.sender] - _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x30002004000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou38(address,uint256), txdata: 0x7daba89100000000000000000000000000000000000000000000000000000000000000000404408008000201041020801020010102010201400404011001801010201040, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: EventMetadata
Function name: increaseLockTime_intou33(uint256)
PC address: 664
Estimated Gas Usage: 6172 - 26457
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:13

lockTime_intou33[msg.sender] += _secondsToIncrease

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000abfb9, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x19dab00000002, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: increaseLockTime_intou33(uint256), txdata: 0x7d7569716040002000000000000000400000000100000101010000000000000101010100, value: 0x0
Caller: [ATTACKER], function: increaseLockTime_intou33(uint256), txdata: 0x7d756971d000400200800000000400010102020202020102000102000002000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ProofHash
Function name: transfer_intou38(address,uint256)
PC address: 724
Estimated Gas Usage: 13113 - 54059
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:217

balances_intou38[msg.sender] -= _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x30002004000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou38(address,uint256), txdata: 0x7daba89100000000000000000000000000000000000000000000000000000000000000000404408008000201041020801020010102010201400404011001801010201040, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: EventMetadata
Function name: withdraw_intou33()
PC address: 743
Estimated Gas Usage: 1079 - 1364
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:16

require(now > lockTime_intou33[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0xfbfb8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: withdraw_intou33(), txdata: 0xb1f09e89, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ProofHash
Function name: transfer_intou38(address,uint256)
PC address: 800
Estimated Gas Usage: 13113 - 54059
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:218

balances_intou38[_to] += _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x100110068408001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transfer_intou38(address,uint256), txdata: 0x7daba891000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe88eac40b7fc00000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Template
Function name: withdraw_ovrflow1()
PC address: 1186
Estimated Gas Usage: 1102 - 1387
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:328

require(now > lockTime_intou1[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x410114001000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_ovrflow1(), txdata: 0x76be3cd1, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Template
Function name: transfer_intou14(address,uint256)
PC address: 1382
Estimated Gas Usage: 13135 - 54081
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:356

balances_intou14[msg.sender] - _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x4109020100c0801, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou14(address,uint256), txdata: 0xaefa551900000000000000000000000000000000000000000000000000000000000000000040020101400101800801010401020120010480200101011001100208040201, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Template
Function name: transfer_intou14(address,uint256)
PC address: 1463
Estimated Gas Usage: 13135 - 54081
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:357

balances_intou14[msg.sender] -= _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x4109020100c0801, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou14(address,uint256), txdata: 0xaefa551900000000000000000000000000000000000000000000000000000000000000000040020101400101800801010401020120010480200101011001100208040201, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Template
Function name: transfer_intou14(address,uint256)
PC address: 1540
Estimated Gas Usage: 13135 - 54081
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:358

balances_intou14[_to] += _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x410114021009707, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou14(address,uint256), txdata: 0xaefa5519000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef4000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Template
Function name: transfer_intou30(address,uint256)
PC address: 1626
Estimated Gas Usage: 13157 - 54103
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:368

balances_intou30[msg.sender] - _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x10112004000009, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou30(address,uint256), txdata: 0xc036563e00000000000000000000000000000000000000000000000000000000000000000404010401040202200401402020010208801010400101080840012004800201, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Operated
Function name: withdraw_intou9()
PC address: 1682
Estimated Gas Usage: 1081 - 1366
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:118

require(now > lockTime_intou9[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000402, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_intou9(), txdata: 0x1cbdc87d, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Template
Function name: transfer_intou30(address,uint256)
PC address: 1707
Estimated Gas Usage: 13157 - 54103
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:369

balances_intou30[msg.sender] -= _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x10112004000009, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou30(address,uint256), txdata: 0xc036563e00000000000000000000000000000000000000000000000000000000000000000404010401040202200401402020010208801010400101080840012004800201, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Template
Function name: transfer_intou30(address,uint256)
PC address: 1784
Estimated Gas Usage: 13157 - 54103
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:370

balances_intou30[_to] += _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x210110015038d2a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou30(address,uint256), txdata: 0xc036563e000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefffdfbffffffdff2d100000000000000000000000000000000000000000000002, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Operated
Function name: withdraw_intou17()
PC address: 1861
Estimated Gas Usage: 1125 - 1410
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:75

require(now > lockTime_intou17[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_intou17(), txdata: 0x24243846, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Operated
Function name: transfer_intou26(address,uint256)
PC address: 2101
Estimated Gas Usage: 13180 - 54126
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:155

balances_intou26[msg.sender] - _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x10040788887, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou26(address,uint256), txdata: 0x46aa924300000000000000000000000000000000000000000000000000000001000001080401080404201008044008102080018020010880400201010180010101088040, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Operated
Function name: transfer_intou26(address,uint256)
PC address: 2182
Estimated Gas Usage: 13180 - 54126
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:156

balances_intou26[msg.sender] -= _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x10040788887, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou26(address,uint256), txdata: 0x46aa924300000000000000000000000000000000000000000000000000000001000001080401080404201008044008102080018020010880400201010180010101088040, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Operated
Function name: transfer_intou26(address,uint256)
PC address: 2259
Estimated Gas Usage: 13180 - 54126
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:157

balances_intou26[_to] += _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x4008200011, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000002, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou26(address,uint256), txdata: 0x46aa9243000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef8000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Operated
Function name: withdraw_intou25()
PC address: 2541
Estimated Gas Usage: 1102 - 1387
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:134

require(now > lockTime_intou25[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x2100000040004204, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw_intou25(), txdata: 0x835185a4, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: Operated
Function name: withdraw_intou37()
PC address: 2879
Estimated Gas Usage: 1057 - 1342
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:91

require(now > lockTime_intou37[msg.sender])

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000400021091, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: withdraw_intou37(), txdata: 0xc2bc6798, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Operated
Function name: transfer_intou22(address,uint256)
PC address: 3032
Estimated Gas Usage: 13157 - 54103
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:44

balances_intou22[msg.sender] - _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x201000200ad8763, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transfer_intou22(address,uint256), txdata: 0xd7f8581a00000000000000000000000000000000000000000000000000000000000000008001010120800101010101010101010102010101004001040101010101010101, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Operated
Function name: transfer_intou22(address,uint256)
PC address: 3112
Estimated Gas Usage: 13157 - 54103
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:45

balances_intou22[msg.sender] -= _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x201000200ad8763, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transfer_intou22(address,uint256), txdata: 0xd7f8581a00000000000000000000000000000000000000000000000000000000000000008001010120800101010101010101010102010101004001040101010101010101, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Operated
Function name: transfer_intou22(address,uint256)
PC address: 3188
Estimated Gas Usage: 13157 - 54103
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: tool_results/Mythril/analyzed_buggy_contracts/Overflow-Underflow/buggy_43.sol:46

balances_intou22[_to] += _value

--------------------
Initial State:

Account: [CREATOR], balance: 0x1018194c542c01, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transfer_intou22(address,uint256), txdata: 0xd7f8581a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef8000000000000000000000000000000000000000000000000000000000000000, value: 0x0


